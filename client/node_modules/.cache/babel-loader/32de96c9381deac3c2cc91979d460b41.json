{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/cafeto/client/src/components/Comments.js\";\nimport React, { Component } from 'react';\n\nclass Comments extends Component {\n  constructor() {\n    super();\n    this.state = {\n      description: '',\n      _id: '',\n      tasks: []\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.addTask = this.addTask.bind(this);\n    this.fetchTasks = this.fetchTasks.bind(this);\n  }\n\n  handleChange(e) {\n    const _e$target = e.target,\n          name = _e$target.name,\n          value = _e$target.value;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  addTask(e) {\n    e.preventDefault();\n    const IDMOVIE = this.props.idmovie;\n    const EMAIL = this.props.useremail;\n    console.log(EMAIL);\n    console.log(this.props.idmovie);\n\n    if (this.state._id) {\n      fetch(\"/api/tasks/\".concat(this.state._id), {\n        method: 'PUT',\n        body: JSON.stringify({\n          title: this.state.title,\n          description: this.state.description,\n          idmovie: this.props.idmovie,\n          email: EMAIL\n        }),\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      }).then(res => res.json()).then(data => {\n        this.setState({\n          _id: '',\n          title: '',\n          description: ''\n        });\n        this.fetchTasks();\n      });\n    } else {\n      fetch('/api/tasks', {\n        method: 'POST',\n        body: JSON.stringify({\n          id: this.state._id,\n          title: this.state.title,\n          description: this.state.description,\n          idmovie: IDMOVIE,\n          email: EMAIL\n        }),\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      }).then(res => res.json()).then(data => {\n        console.log(data);\n        this.setState({\n          title: '',\n          description: ''\n        });\n        this.fetchTasks();\n      }).catch(err => console.error(err));\n    }\n  }\n\n  componentDidMount() {\n    this.fetchTasks();\n    console.log(this.props.user);\n  }\n\n  fetchTasks() {\n    fetch('/api/comments').then(res => res.json()).then(data => {\n      this.setState({\n        tasks: data\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"col-md-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card p-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Add Comments\")), React.createElement(\"form\", {\n      onSubmit: this.addTask,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      className: \"form-control mb-2\",\n      name: \"description\",\n      onChange: this.handleChange,\n      value: this.state.description,\n      cols: \"30\",\n      rows: \"10\",\n      placeholder: \"Task Description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-block btn-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Send\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"mt-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Others Comments\")), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), this.state.tasks.map(task => {\n      return task.idmovie === this.props.idmovie ? React.createElement(\"span\", {\n        key: task._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, task.description), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      })) : null;\n    }))));\n  }\n\n}\n\nexport default Comments;","map":{"version":3,"sources":["/Users/admin/Desktop/cafeto/client/src/components/Comments.js"],"names":["React","Component","Comments","constructor","state","description","_id","tasks","handleChange","bind","addTask","fetchTasks","e","target","name","value","setState","preventDefault","IDMOVIE","props","idmovie","EMAIL","useremail","console","log","fetch","method","body","JSON","stringify","title","email","headers","then","res","json","data","id","catch","err","error","componentDidMount","user","render","map","task"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\n\nclass Comments extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      description: '',\n      _id: '',\n      tasks: []\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.addTask = this.addTask.bind(this);\n    this.fetchTasks = this.fetchTasks.bind(this);\n  }\n\n  handleChange(e) {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  addTask(e) {\n    e.preventDefault();\n    const IDMOVIE = this.props.idmovie;\n    const EMAIL = this.props.useremail;\n    console.log(EMAIL);\n    console.log(this.props.idmovie);\n    if(this.state._id) {\n      fetch(`/api/tasks/${this.state._id}`, {\n        method: 'PUT',\n        body: JSON.stringify({\n          title: this.state.title,\n          description: this.state.description,\n          idmovie: this.props.idmovie,\n          email: EMAIL\n        }),\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      })\n        .then(res => res.json())\n        .then(data => {\n          this.setState({_id: '', title: '', description: ''});\n          this.fetchTasks();\n        });\n    } else {\n      fetch('/api/tasks', {\n        method: 'POST',\n        body: JSON.stringify(\n            {\n              id:this.state._id,\n              title:this.state.title,\n              description:this.state.description,\n              idmovie: IDMOVIE,\n              email: EMAIL\n            }    \n          ),\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      })\n        .then(res => res.json())\n        .then(data => {\n          console.log(data);\n          this.setState({title: '', description: ''});\n          this.fetchTasks();\n        })\n        .catch(err => console.error(err));\n    }\n\n  }\n\n  componentDidMount() {\n    this.fetchTasks();\n    console.log(this.props.user);\n  }\n\n  fetchTasks() {\n    fetch('/api/comments')\n      .then(res => res.json())\n      .then(data => {\n        this.setState({tasks: data});\n      });\n  }\n \n\n    render(){ \n      return (\n           <div className='col-md-12'>\n              <div className='card p-4'>\n                      <h3 className='mb-3'><b>Add Comments</b></h3>\n                        <form onSubmit={this.addTask}>\n                          <textarea  className=\"form-control mb-2\" name=\"description\" onChange={this.handleChange} value={this.state.description} cols=\"30\" rows=\"10\" placeholder=\"Task Description\"></textarea>\n                          <button type=\"submit\" className=\"btn btn-block btn-info\">Send</button>\n                        </form>\n                        <div>\n                        <h3 className='mt-4'><b>Others Comments</b></h3><hr/>\n                        { \n                           \n                           this.state.tasks.map(task => {\n                              \n                            return task.idmovie===this.props.idmovie ? (\n                                <span key={task._id}>        \n                                  <p>{task.description}</p><br/><hr/><br/>\n                                </span>\n                              ) : null;\n\n                            })\n                        }\n                        </div>\n                </div>  \n            </div> \n      \n      ) \n     \n    }\n  }\n  \n  \n  export default Comments;"]},"metadata":{},"sourceType":"module"}