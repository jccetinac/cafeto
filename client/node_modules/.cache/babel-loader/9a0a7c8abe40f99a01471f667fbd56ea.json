{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/cafeto/client/src/components/Comments.js\";\nimport React, { Component } from 'react';\n\nclass Comments extends Component {\n  constructor() {\n    super();\n    this.state = {\n      title: '',\n      description: '',\n      _id: '',\n      tasks: []\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.addTask = this.addTask.bind(this);\n    this.fetchTasks = this.fetchTasks.bind(this);\n  }\n\n  handleChange(e) {\n    const _e$target = e.target,\n          name = _e$target.name,\n          value = _e$target.value;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  addTask(e) {\n    e.preventDefault();\n    const IDMOVIE = this.props.idmovie;\n    const EMAIL = this.props.useremail;\n    console.log(EMAIL);\n    console.log(this.props.idmovie);\n\n    if (this.state._id) {\n      fetch(\"/api/tasks/\".concat(this.state._id), {\n        method: 'PUT',\n        body: JSON.stringify({\n          title: this.state.title,\n          description: this.state.description,\n          idmovie: this.props.idmovie,\n          email: EMAIL\n        }),\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      }).then(res => res.json()).then(data => {\n        this.setState({\n          _id: '',\n          title: '',\n          description: ''\n        });\n        this.fetchTasks();\n      });\n    } else {\n      fetch('/api/tasks', {\n        method: 'POST',\n        body: JSON.stringify({\n          id: this.state._id,\n          title: this.state.title,\n          description: this.state.description,\n          idmovie: IDMOVIE,\n          email: EMAIL\n        }),\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      }).then(res => res.json()).then(data => {\n        console.log(data);\n        this.setState({\n          title: '',\n          description: ''\n        });\n        this.fetchTasks();\n      }).catch(err => console.error(err));\n    }\n  }\n\n  deleteTask(id) {\n    console.log('vas a borrar ' + id);\n  }\n\n  editTask(id) {\n    fetch(\"/api/tasks/\".concat(id)).then(res => res.json()).then(data => {\n      console.log(data);\n      this.setState({\n        title: data.title,\n        description: data.description,\n        _id: data._id\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.fetchTasks();\n    console.log(this.props.user);\n  }\n\n  fetchTasks() {\n    fetch('/api/tasks').then(res => res.json()).then(data => {\n      this.setState({\n        tasks: data\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"col-md-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card p-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Add Comments\")), React.createElement(\"form\", {\n      onSubmit: this.addTask,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"form-control mb-2\",\n      name: \"title\",\n      onChange: this.handleChange,\n      value: this.state.title,\n      type: \"text\",\n      placeholder: \"Task Title\",\n      autoFocus: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }), React.createElement(\"textarea\", {\n      className: \"form-control mb-2\",\n      name: \"description\",\n      onChange: this.handleChange,\n      value: this.state.description,\n      cols: \"30\",\n      rows: \"10\",\n      placeholder: \"Task Description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-block btn-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"Send\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"mt-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"Others Comments\")), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }), this.state.tasks.map(task => {\n      return task.idmovie === this.props.idmovie ? React.createElement(\"span\", {\n        key: task._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, task.description), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      })) : null;\n    }))));\n  }\n\n}\n\nexport default Comments;","map":{"version":3,"sources":["/Users/admin/Desktop/cafeto/client/src/components/Comments.js"],"names":["React","Component","Comments","constructor","state","title","description","_id","tasks","handleChange","bind","addTask","fetchTasks","e","target","name","value","setState","preventDefault","IDMOVIE","props","idmovie","EMAIL","useremail","console","log","fetch","method","body","JSON","stringify","email","headers","then","res","json","data","id","catch","err","error","deleteTask","editTask","componentDidMount","user","render","map","task"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAGA,MAAMC,QAAN,SAAuBD,SAAvB,CAAiC;AAE/BE,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,WAAW,EAAE,EAFF;AAGXC,MAAAA,GAAG,EAAE,EAHM;AAIXC,MAAAA,KAAK,EAAE;AAJI,KAAb;AAMA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,OAAL,GAAe,KAAKA,OAAL,CAAaD,IAAb,CAAkB,IAAlB,CAAf;AACA,SAAKE,UAAL,GAAkB,KAAKA,UAAL,CAAgBF,IAAhB,CAAqB,IAArB,CAAlB;AACD;;AAEDD,EAAAA,YAAY,CAACI,CAAD,EAAI;AAAA,sBACUA,CAAC,CAACC,MADZ;AAAA,UACNC,IADM,aACNA,IADM;AAAA,UACAC,KADA,aACAA,KADA;AAEd,SAAKC,QAAL,CAAc;AACZ,OAACF,IAAD,GAAQC;AADI,KAAd;AAGD;;AAEDL,EAAAA,OAAO,CAACE,CAAD,EAAI;AACTA,IAAAA,CAAC,CAACK,cAAF;AACA,UAAMC,OAAO,GAAG,KAAKC,KAAL,CAAWC,OAA3B;AACA,UAAMC,KAAK,GAAG,KAAKF,KAAL,CAAWG,SAAzB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKL,KAAL,CAAWC,OAAvB;;AACA,QAAG,KAAKjB,KAAL,CAAWG,GAAd,EAAmB;AACjBmB,MAAAA,KAAK,sBAAe,KAAKtB,KAAL,CAAWG,GAA1B,GAAiC;AACpCoB,QAAAA,MAAM,EAAE,KAD4B;AAEpCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBzB,UAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KADC;AAEnBC,UAAAA,WAAW,EAAE,KAAKF,KAAL,CAAWE,WAFL;AAGnBe,UAAAA,OAAO,EAAE,KAAKD,KAAL,CAAWC,OAHD;AAInBU,UAAAA,KAAK,EAAET;AAJY,SAAf,CAF8B;AAQpCU,QAAAA,OAAO,EAAE;AACP,oBAAU,kBADH;AAEP,0BAAgB;AAFT;AAR2B,OAAjC,CAAL,CAaGC,IAbH,CAaQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAbf,EAcGF,IAdH,CAcQG,IAAI,IAAI;AACZ,aAAKnB,QAAL,CAAc;AAACV,UAAAA,GAAG,EAAE,EAAN;AAAUF,UAAAA,KAAK,EAAE,EAAjB;AAAqBC,UAAAA,WAAW,EAAE;AAAlC,SAAd;AACA,aAAKM,UAAL;AACD,OAjBH;AAkBD,KAnBD,MAmBO;AACLc,MAAAA,KAAK,CAAC,YAAD,EAAe;AAClBC,QAAAA,MAAM,EAAE,MADU;AAElBC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CACF;AACEO,UAAAA,EAAE,EAAC,KAAKjC,KAAL,CAAWG,GADhB;AAEEF,UAAAA,KAAK,EAAC,KAAKD,KAAL,CAAWC,KAFnB;AAGEC,UAAAA,WAAW,EAAC,KAAKF,KAAL,CAAWE,WAHzB;AAIEe,UAAAA,OAAO,EAAEF,OAJX;AAKEY,UAAAA,KAAK,EAAET;AALT,SADE,CAFY;AAWlBU,QAAAA,OAAO,EAAE;AACP,oBAAU,kBADH;AAEP,0BAAgB;AAFT;AAXS,OAAf,CAAL,CAgBGC,IAhBH,CAgBQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAhBf,EAiBGF,IAjBH,CAiBQG,IAAI,IAAI;AACZZ,QAAAA,OAAO,CAACC,GAAR,CAAYW,IAAZ;AACA,aAAKnB,QAAL,CAAc;AAACZ,UAAAA,KAAK,EAAE,EAAR;AAAYC,UAAAA,WAAW,EAAE;AAAzB,SAAd;AACA,aAAKM,UAAL;AACD,OArBH,EAsBG0B,KAtBH,CAsBSC,GAAG,IAAIf,OAAO,CAACgB,KAAR,CAAcD,GAAd,CAtBhB;AAuBD;AAEF;;AAEDE,EAAAA,UAAU,CAACJ,EAAD,EAAK;AACjBb,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAiBY,EAA7B;AACG;;AAEDK,EAAAA,QAAQ,CAACL,EAAD,EAAK;AACXX,IAAAA,KAAK,sBAAeW,EAAf,EAAL,CACGJ,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQG,IAAI,IAAI;AACZZ,MAAAA,OAAO,CAACC,GAAR,CAAYW,IAAZ;AACA,WAAKnB,QAAL,CAAc;AACZZ,QAAAA,KAAK,EAAE+B,IAAI,CAAC/B,KADA;AAEZC,QAAAA,WAAW,EAAE8B,IAAI,CAAC9B,WAFN;AAGZC,QAAAA,GAAG,EAAE6B,IAAI,CAAC7B;AAHE,OAAd;AAKD,KATH;AAUD;;AAEDoC,EAAAA,iBAAiB,GAAG;AAClB,SAAK/B,UAAL;AACAY,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKL,KAAL,CAAWwB,IAAvB;AACD;;AAEDhC,EAAAA,UAAU,GAAG;AACXc,IAAAA,KAAK,CAAC,YAAD,CAAL,CACGO,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQG,IAAI,IAAI;AACZ,WAAKnB,QAAL,CAAc;AAACT,QAAAA,KAAK,EAAE4B;AAAR,OAAd;AACD,KAJH;AAKD;;AAGCS,EAAAA,MAAM,GAAE;AACN,WACK;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACQ;AAAI,MAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAArB,CADR,EAEU;AAAM,MAAA,QAAQ,EAAE,KAAKlC,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,SAAS,EAAC,mBAAjB;AAAqC,MAAA,IAAI,EAAC,OAA1C;AAAkD,MAAA,QAAQ,EAAE,KAAKF,YAAjE;AAA+E,MAAA,KAAK,EAAE,KAAKL,KAAL,CAAWC,KAAjG;AAAwG,MAAA,IAAI,EAAC,MAA7G;AAAoH,MAAA,WAAW,EAAC,YAAhI;AAA6I,MAAA,SAAS,MAAtJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAW,MAAA,SAAS,EAAC,mBAArB;AAAyC,MAAA,IAAI,EAAC,aAA9C;AAA4D,MAAA,QAAQ,EAAE,KAAKI,YAA3E;AAAyF,MAAA,KAAK,EAAE,KAAKL,KAAL,CAAWE,WAA3G;AAAwH,MAAA,IAAI,EAAC,IAA7H;AAAkI,MAAA,IAAI,EAAC,IAAvI;AAA4I,MAAA,WAAW,EAAC,kBAAxJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,wBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,CAFV,EAOU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAI,MAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAArB,CADA,EACgD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADhD,EAIG,KAAKF,KAAL,CAAWI,KAAX,CAAiBsC,GAAjB,CAAqBC,IAAI,IAAI;AAE5B,aAAOA,IAAI,CAAC1B,OAAL,KAAe,KAAKD,KAAL,CAAWC,OAA1B,GACH;AAAM,QAAA,GAAG,EAAE0B,IAAI,CAACxC,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIwC,IAAI,CAACzC,WAAT,CADF,EAC2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAD3B,EACgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADhC,EACqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADrC,CADG,GAUD,IAVN;AAYC,KAdF,CAJH,CAPV,CADH,CADL;AAmCD;;AA9I4B;;AAkJ/B,eAAeJ,QAAf","sourcesContent":["import React, { Component } from 'react';\n\n\nclass Comments extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      title: '',\n      description: '',\n      _id: '',\n      tasks: []\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.addTask = this.addTask.bind(this);\n    this.fetchTasks = this.fetchTasks.bind(this);\n  }\n\n  handleChange(e) {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  addTask(e) {\n    e.preventDefault();\n    const IDMOVIE = this.props.idmovie;\n    const EMAIL = this.props.useremail;\n    console.log(EMAIL);\n    console.log(this.props.idmovie);\n    if(this.state._id) {\n      fetch(`/api/tasks/${this.state._id}`, {\n        method: 'PUT',\n        body: JSON.stringify({\n          title: this.state.title,\n          description: this.state.description,\n          idmovie: this.props.idmovie,\n          email: EMAIL\n        }),\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      })\n        .then(res => res.json())\n        .then(data => {\n          this.setState({_id: '', title: '', description: ''});\n          this.fetchTasks();\n        });\n    } else {\n      fetch('/api/tasks', {\n        method: 'POST',\n        body: JSON.stringify(\n            {\n              id:this.state._id,\n              title:this.state.title,\n              description:this.state.description,\n              idmovie: IDMOVIE,\n              email: EMAIL\n            }    \n          ),\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      })\n        .then(res => res.json())\n        .then(data => {\n          console.log(data);\n          this.setState({title: '', description: ''});\n          this.fetchTasks();\n        })\n        .catch(err => console.error(err));\n    }\n\n  }\n\n  deleteTask(id) {\nconsole.log('vas a borrar '+ id);\n  }\n\n  editTask(id) {\n    fetch(`/api/tasks/${id}`)\n      .then(res => res.json())\n      .then(data => {\n        console.log(data);\n        this.setState({\n          title: data.title,\n          description: data.description,\n          _id: data._id\n        });\n      });\n  }\n\n  componentDidMount() {\n    this.fetchTasks();\n    console.log(this.props.user);\n  }\n\n  fetchTasks() {\n    fetch('/api/tasks')\n      .then(res => res.json())\n      .then(data => {\n        this.setState({tasks: data});\n      });\n  }\n \n\n    render(){ \n      return (\n           <div className='col-md-12'>\n              <div className='card p-4'>\n                      <h3 className='mb-3'><b>Add Comments</b></h3>\n                        <form onSubmit={this.addTask}>\n                          <input className=\"form-control mb-2\" name=\"title\" onChange={this.handleChange} value={this.state.title} type=\"text\" placeholder=\"Task Title\" autoFocus/>\n                          <textarea  className=\"form-control mb-2\" name=\"description\" onChange={this.handleChange} value={this.state.description} cols=\"30\" rows=\"10\" placeholder=\"Task Description\"></textarea>\n                          <button type=\"submit\" className=\"btn btn-block btn-info\">Send</button>\n                        </form>\n                        <div>\n                        <h3 className='mt-4'><b>Others Comments</b></h3><hr/>\n                        { \n                           \n                           this.state.tasks.map(task => {\n                              \n                            return task.idmovie===this.props.idmovie ? (\n                                <span key={task._id}>        \n                                  <p>{task.description}</p><br/><hr/><br/>\n                                  {/* <button onClick={() => this.deleteTask(task._id)} className=\"btn btn-danger\">\n                                  <i className=\"material-icons\">delete</i> \n                                </button>\n                                <button onClick={() => this.editTask(task._id)} className=\"btn btn-success\" style={{margin: '4px'}}>\n                                  <i className=\"material-icons\">edit</i>\n                                </button>     */}\n                                </span>\n                              ) : null;\n\n                            })\n                        }\n                        </div>\n                </div>  \n            </div> \n      \n      ) \n     \n    }\n  }\n  \n  \n  export default Comments;"]},"metadata":{},"sourceType":"module"}